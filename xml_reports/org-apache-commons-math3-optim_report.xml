<?xml version="1.0" encoding="UTF-8" standalone="no"?><report><package name="org/apache/commons/math3/optim">
        <class name="org/apache/commons/math3/optim/MaxIter" sourcefilename="MaxIter.java">
            <method desc="(I)V" line="34" name="&lt;init&gt;">
                <counter covered="0" missed="14" type="INSTRUCTION"/>
                <counter covered="0" missed="2" type="BRANCH"/>
                <counter covered="0" missed="5" type="LINE"/>
                <counter covered="0" missed="2" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()I" line="48" name="getMaxIter">
                <counter covered="0" missed="3" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()Lorg/apache/commons/math3/optim/MaxIter;" line="59" name="unlimited">
                <counter covered="0" missed="5" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <counter covered="0" missed="22" type="INSTRUCTION"/>
            <counter covered="0" missed="2" type="BRANCH"/>
            <counter covered="0" missed="7" type="LINE"/>
            <counter covered="0" missed="4" type="COMPLEXITY"/>
            <counter covered="0" missed="3" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </class>
        <class name="org/apache/commons/math3/optim/BaseMultivariateOptimizer" sourcefilename="BaseMultivariateOptimizer.java">
            <method desc="(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V" line="47" name="&lt;init&gt;">
                <counter covered="0" missed="4" type="INSTRUCTION"/>
                <counter covered="0" missed="2" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;" line="65" name="optimize">
                <counter covered="0" missed="4" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="([Lorg/apache/commons/math3/optim/OptimizationData;)V" line="81" name="parseOptimizationData">
                <counter covered="0" missed="46" type="INSTRUCTION"/>
                <counter covered="0" missed="6" type="BRANCH"/>
                <counter covered="0" missed="12" type="LINE"/>
                <counter covered="0" missed="4" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()[D" line="108" name="getStartPoint">
                <counter covered="0" missed="10" type="INSTRUCTION"/>
                <counter covered="0" missed="2" type="BRANCH"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="2" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()[D" line="114" name="getLowerBound">
                <counter covered="0" missed="10" type="INSTRUCTION"/>
                <counter covered="0" missed="2" type="BRANCH"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="2" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()[D" line="120" name="getUpperBound">
                <counter covered="0" missed="10" type="INSTRUCTION"/>
                <counter covered="0" missed="2" type="BRANCH"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="2" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()V" line="127" name="checkParameters">
                <counter covered="0" missed="100" type="INSTRUCTION"/>
                <counter covered="0" missed="18" type="BRANCH"/>
                <counter covered="0" missed="19" type="LINE"/>
                <counter covered="0" missed="10" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <counter covered="0" missed="184" type="INSTRUCTION"/>
            <counter covered="0" missed="30" type="BRANCH"/>
            <counter covered="0" missed="37" type="LINE"/>
            <counter covered="0" missed="22" type="COMPLEXITY"/>
            <counter covered="0" missed="7" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </class>
        <class name="org/apache/commons/math3/optim/BaseOptimizer" sourcefilename="BaseOptimizer.java">
            <method desc="(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V" line="47" name="&lt;init&gt;">
                <counter covered="0" missed="6" type="INSTRUCTION"/>
                <counter covered="0" missed="2" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="(Lorg/apache/commons/math3/optim/ConvergenceChecker;II)V" line="57" name="&lt;init&gt;">
                <counter covered="0" missed="26" type="INSTRUCTION"/>
                <counter covered="0" missed="5" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()I" line="70" name="getMaxEvaluations">
                <counter covered="0" missed="4" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()I" line="82" name="getEvaluations">
                <counter covered="0" missed="4" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()I" line="91" name="getMaxIterations">
                <counter covered="0" missed="4" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()I" line="103" name="getIterations">
                <counter covered="0" missed="4" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()Lorg/apache/commons/math3/optim/ConvergenceChecker;" line="112" name="getConvergenceChecker">
                <counter covered="0" missed="3" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;" line="147" name="optimize">
                <counter covered="0" missed="12" type="INSTRUCTION"/>
                <counter covered="0" missed="4" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()Ljava/lang/Object;" line="169" name="optimize">
                <counter covered="0" missed="9" type="INSTRUCTION"/>
                <counter covered="0" missed="3" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()V" line="191" name="incrementEvaluationCount">
                <counter covered="0" missed="4" type="INSTRUCTION"/>
                <counter covered="0" missed="2" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()V" line="202" name="incrementIterationCount">
                <counter covered="0" missed="4" type="INSTRUCTION"/>
                <counter covered="0" missed="2" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="([Lorg/apache/commons/math3/optim/OptimizationData;)V" line="219" name="parseOptimizationData">
                <counter covered="0" missed="37" type="INSTRUCTION"/>
                <counter covered="0" missed="6" type="BRANCH"/>
                <counter covered="0" missed="8" type="LINE"/>
                <counter covered="0" missed="4" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <counter covered="0" missed="117" type="INSTRUCTION"/>
            <counter covered="0" missed="6" type="BRANCH"/>
            <counter covered="0" missed="31" type="LINE"/>
            <counter covered="0" missed="15" type="COMPLEXITY"/>
            <counter covered="0" missed="12" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </class>
        <class name="org/apache/commons/math3/optim/BaseOptimizer$MaxIterCallback" sourcefilename="BaseOptimizer.java">
            <method desc="(I)V" line="257" name="trigger">
                <counter covered="0" missed="6" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <counter covered="0" missed="6" type="INSTRUCTION"/>
            <counter covered="0" missed="1" type="LINE"/>
            <counter covered="0" missed="1" type="COMPLEXITY"/>
            <counter covered="0" missed="1" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </class>
        <class name="org/apache/commons/math3/optim/AbstractOptimizationProblem$MaxEvalCallback" sourcefilename="AbstractOptimizationProblem.java">
            <method desc="(I)V" line="85" name="trigger">
                <counter covered="0" missed="6" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <counter covered="0" missed="6" type="INSTRUCTION"/>
            <counter covered="0" missed="1" type="LINE"/>
            <counter covered="0" missed="1" type="COMPLEXITY"/>
            <counter covered="0" missed="1" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </class>
        <class name="org/apache/commons/math3/optim/BaseOptimizer$MaxEvalCallback" sourcefilename="BaseOptimizer.java">
            <method desc="(I)V" line="242" name="trigger">
                <counter covered="0" missed="6" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <counter covered="0" missed="6" type="INSTRUCTION"/>
            <counter covered="0" missed="1" type="LINE"/>
            <counter covered="0" missed="1" type="COMPLEXITY"/>
            <counter covered="0" missed="1" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </class>
        <class name="org/apache/commons/math3/optim/PointVectorValuePair" sourcefilename="PointVectorValuePair.java">
            <method desc="([D[D)V" line="43" name="&lt;init&gt;">
                <counter covered="0" missed="6" type="INSTRUCTION"/>
                <counter covered="0" missed="2" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="([D[DZ)V" line="57" name="&lt;init&gt;">
                <counter covered="0" missed="25" type="INSTRUCTION"/>
                <counter covered="0" missed="8" type="BRANCH"/>
                <counter covered="0" missed="2" type="LINE"/>
                <counter covered="0" missed="5" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()[D" line="73" name="getPoint">
                <counter covered="0" missed="12" type="INSTRUCTION"/>
                <counter covered="0" missed="2" type="BRANCH"/>
                <counter covered="0" missed="2" type="LINE"/>
                <counter covered="0" missed="2" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()[D" line="83" name="getPointRef">
                <counter covered="0" missed="4" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()[D" line="93" name="getValue">
                <counter covered="0" missed="12" type="INSTRUCTION"/>
                <counter covered="0" missed="2" type="BRANCH"/>
                <counter covered="0" missed="2" type="LINE"/>
                <counter covered="0" missed="2" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()[D" line="104" name="getValueRef">
                <counter covered="0" missed="4" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()Ljava/lang/Object;" line="112" name="writeReplace">
                <counter covered="0" missed="9" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <counter covered="0" missed="72" type="INSTRUCTION"/>
            <counter covered="0" missed="12" type="BRANCH"/>
            <counter covered="0" missed="11" type="LINE"/>
            <counter covered="0" missed="13" type="COMPLEXITY"/>
            <counter covered="0" missed="7" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </class>
        <class name="org/apache/commons/math3/optim/SimpleVectorValueChecker" sourcefilename="SimpleVectorValueChecker.java">
            <method desc="(DD)V" line="66" name="&lt;init&gt;">
                <counter covered="0" missed="8" type="INSTRUCTION"/>
                <counter covered="0" missed="3" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="(DDI)V" line="88" name="&lt;init&gt;">
                <counter covered="0" missed="16" type="INSTRUCTION"/>
                <counter covered="0" missed="2" type="BRANCH"/>
                <counter covered="0" missed="5" type="LINE"/>
                <counter covered="0" missed="2" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="(ILorg/apache/commons/math3/optim/PointVectorValuePair;Lorg/apache/commons/math3/optim/PointVectorValuePair;)Z" line="116" name="converged">
                <counter covered="0" missed="59" type="INSTRUCTION"/>
                <counter covered="0" missed="10" type="BRANCH"/>
                <counter covered="0" missed="12" type="LINE"/>
                <counter covered="0" missed="6" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <counter covered="0" missed="83" type="INSTRUCTION"/>
            <counter covered="0" missed="12" type="BRANCH"/>
            <counter covered="0" missed="20" type="LINE"/>
            <counter covered="0" missed="9" type="COMPLEXITY"/>
            <counter covered="0" missed="3" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </class>
        <class name="org/apache/commons/math3/optim/MaxEval" sourcefilename="MaxEval.java">
            <method desc="(I)V" line="34" name="&lt;init&gt;">
                <counter covered="0" missed="14" type="INSTRUCTION"/>
                <counter covered="0" missed="2" type="BRANCH"/>
                <counter covered="0" missed="5" type="LINE"/>
                <counter covered="0" missed="2" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()I" line="48" name="getMaxEval">
                <counter covered="0" missed="3" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()Lorg/apache/commons/math3/optim/MaxEval;" line="59" name="unlimited">
                <counter covered="0" missed="5" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <counter covered="0" missed="22" type="INSTRUCTION"/>
            <counter covered="0" missed="2" type="BRANCH"/>
            <counter covered="0" missed="7" type="LINE"/>
            <counter covered="0" missed="4" type="COMPLEXITY"/>
            <counter covered="0" missed="3" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </class>
        <class name="org/apache/commons/math3/optim/PointValuePair" sourcefilename="PointValuePair.java">
            <method desc="([DD)V" line="43" name="&lt;init&gt;">
                <counter covered="0" missed="6" type="INSTRUCTION"/>
                <counter covered="0" missed="2" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="([DDZ)V" line="57" name="&lt;init&gt;">
                <counter covered="0" missed="16" type="INSTRUCTION"/>
                <counter covered="0" missed="4" type="BRANCH"/>
                <counter covered="0" missed="2" type="LINE"/>
                <counter covered="0" missed="3" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()[D" line="69" name="getPoint">
                <counter covered="0" missed="12" type="INSTRUCTION"/>
                <counter covered="0" missed="2" type="BRANCH"/>
                <counter covered="0" missed="2" type="LINE"/>
                <counter covered="0" missed="2" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()[D" line="79" name="getPointRef">
                <counter covered="0" missed="4" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()Ljava/lang/Object;" line="87" name="writeReplace">
                <counter covered="0" missed="11" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <counter covered="0" missed="49" type="INSTRUCTION"/>
            <counter covered="0" missed="6" type="BRANCH"/>
            <counter covered="0" missed="8" type="LINE"/>
            <counter covered="0" missed="8" type="COMPLEXITY"/>
            <counter covered="0" missed="5" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </class>
        <class name="org/apache/commons/math3/optim/AbstractOptimizationProblem$MaxIterCallback" sourcefilename="AbstractOptimizationProblem.java">
            <method desc="(I)V" line="98" name="trigger">
                <counter covered="0" missed="6" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <counter covered="0" missed="6" type="INSTRUCTION"/>
            <counter covered="0" missed="1" type="LINE"/>
            <counter covered="0" missed="1" type="COMPLEXITY"/>
            <counter covered="0" missed="1" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </class>
        <class name="org/apache/commons/math3/optim/SimpleValueChecker" sourcefilename="SimpleValueChecker.java">
            <method desc="(DD)V" line="65" name="&lt;init&gt;">
                <counter covered="0" missed="8" type="INSTRUCTION"/>
                <counter covered="0" missed="3" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="(DDI)V" line="86" name="&lt;init&gt;">
                <counter covered="0" missed="16" type="INSTRUCTION"/>
                <counter covered="0" missed="2" type="BRANCH"/>
                <counter covered="0" missed="5" type="LINE"/>
                <counter covered="0" missed="2" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="(ILorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)Z" line="114" name="converged">
                <counter covered="0" missed="47" type="INSTRUCTION"/>
                <counter covered="0" missed="8" type="BRANCH"/>
                <counter covered="0" missed="7" type="LINE"/>
                <counter covered="0" missed="5" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <counter covered="0" missed="71" type="INSTRUCTION"/>
            <counter covered="0" missed="10" type="BRANCH"/>
            <counter covered="0" missed="15" type="LINE"/>
            <counter covered="0" missed="8" type="COMPLEXITY"/>
            <counter covered="0" missed="3" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </class>
        <class name="org/apache/commons/math3/optim/PointValuePair$DataTransferObject" sourcefilename="PointValuePair.java">
            <method desc="([DD)V" line="109" name="&lt;init&gt;">
                <counter covered="0" missed="11" type="INSTRUCTION"/>
                <counter covered="0" missed="4" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()Ljava/lang/Object;" line="118" name="readResolve">
                <counter covered="0" missed="9" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <counter covered="0" missed="20" type="INSTRUCTION"/>
            <counter covered="0" missed="5" type="LINE"/>
            <counter covered="0" missed="2" type="COMPLEXITY"/>
            <counter covered="0" missed="2" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </class>
        <class name="org/apache/commons/math3/optim/OptimizationProblem" sourcefilename="OptimizationProblem.java"/>
        <class name="org/apache/commons/math3/optim/ConvergenceChecker" sourcefilename="ConvergenceChecker.java"/>
        <class name="org/apache/commons/math3/optim/AbstractConvergenceChecker" sourcefilename="AbstractConvergenceChecker.java">
            <method desc="(DD)V" line="44" name="&lt;init&gt;">
                <counter covered="0" missed="9" type="INSTRUCTION"/>
                <counter covered="0" missed="4" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()D" line="53" name="getRelativeThreshold">
                <counter covered="0" missed="3" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()D" line="60" name="getAbsoluteThreshold">
                <counter covered="0" missed="3" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <counter covered="0" missed="15" type="INSTRUCTION"/>
            <counter covered="0" missed="6" type="LINE"/>
            <counter covered="0" missed="3" type="COMPLEXITY"/>
            <counter covered="0" missed="3" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </class>
        <class name="org/apache/commons/math3/optim/OptimizationData" sourcefilename="OptimizationData.java"/>
        <class name="org/apache/commons/math3/optim/PointVectorValuePair$DataTransferObject" sourcefilename="PointVectorValuePair.java">
            <method desc="([D[D)V" line="134" name="&lt;init&gt;">
                <counter covered="0" missed="13" type="INSTRUCTION"/>
                <counter covered="0" missed="4" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()Ljava/lang/Object;" line="143" name="readResolve">
                <counter covered="0" missed="9" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <counter covered="0" missed="22" type="INSTRUCTION"/>
            <counter covered="0" missed="5" type="LINE"/>
            <counter covered="0" missed="2" type="COMPLEXITY"/>
            <counter covered="0" missed="2" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </class>
        <class name="org/apache/commons/math3/optim/AbstractOptimizationProblem" sourcefilename="AbstractOptimizationProblem.java">
            <method desc="(IILorg/apache/commons/math3/optim/ConvergenceChecker;)V" line="55" name="&lt;init&gt;">
                <counter covered="0" missed="12" type="INSTRUCTION"/>
                <counter covered="0" missed="5" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()Lorg/apache/commons/math3/util/Incrementor;" line="63" name="getEvaluationCounter">
                <counter covered="0" missed="7" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()Lorg/apache/commons/math3/util/Incrementor;" line="68" name="getIterationCounter">
                <counter covered="0" missed="7" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()Lorg/apache/commons/math3/optim/ConvergenceChecker;" line="73" name="getConvergenceChecker">
                <counter covered="0" missed="3" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()V" line="35" name="&lt;clinit&gt;">
                <counter covered="0" missed="11" type="INSTRUCTION"/>
                <counter covered="0" missed="2" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <counter covered="0" missed="40" type="INSTRUCTION"/>
            <counter covered="0" missed="10" type="LINE"/>
            <counter covered="0" missed="5" type="COMPLEXITY"/>
            <counter covered="0" missed="5" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </class>
        <class name="org/apache/commons/math3/optim/SimplePointChecker" sourcefilename="SimplePointChecker.java">
            <method desc="(DD)V" line="67" name="&lt;init&gt;">
                <counter covered="0" missed="8" type="INSTRUCTION"/>
                <counter covered="0" missed="3" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="(DDI)V" line="87" name="&lt;init&gt;">
                <counter covered="0" missed="16" type="INSTRUCTION"/>
                <counter covered="0" missed="2" type="BRANCH"/>
                <counter covered="0" missed="5" type="LINE"/>
                <counter covered="0" missed="2" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="(ILorg/apache/commons/math3/util/Pair;Lorg/apache/commons/math3/util/Pair;)Z" line="115" name="converged">
                <counter covered="0" missed="61" type="INSTRUCTION"/>
                <counter covered="0" missed="10" type="BRANCH"/>
                <counter covered="0" missed="12" type="LINE"/>
                <counter covered="0" missed="6" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <counter covered="0" missed="85" type="INSTRUCTION"/>
            <counter covered="0" missed="12" type="BRANCH"/>
            <counter covered="0" missed="20" type="LINE"/>
            <counter covered="0" missed="9" type="COMPLEXITY"/>
            <counter covered="0" missed="3" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </class>
        <class name="org/apache/commons/math3/optim/InitialGuess" sourcefilename="InitialGuess.java">
            <method desc="([D)V" line="34" name="&lt;init&gt;">
                <counter covered="0" missed="8" type="INSTRUCTION"/>
                <counter covered="0" missed="3" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()[D" line="44" name="getInitialGuess">
                <counter covered="0" missed="5" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <counter covered="0" missed="13" type="INSTRUCTION"/>
            <counter covered="0" missed="4" type="LINE"/>
            <counter covered="0" missed="2" type="COMPLEXITY"/>
            <counter covered="0" missed="2" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </class>
        <class name="org/apache/commons/math3/optim/SimpleBounds" sourcefilename="SimpleBounds.java">
            <method desc="([D[D)V" line="41" name="&lt;init&gt;">
                <counter covered="0" missed="13" type="INSTRUCTION"/>
                <counter covered="0" missed="4" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()[D" line="52" name="getLower">
                <counter covered="0" missed="5" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()[D" line="60" name="getUpper">
                <counter covered="0" missed="5" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="(I)Lorg/apache/commons/math3/optim/SimpleBounds;" line="72" name="unbounded">
                <counter covered="0" missed="18" type="INSTRUCTION"/>
                <counter covered="0" missed="5" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <counter covered="0" missed="41" type="INSTRUCTION"/>
            <counter covered="0" missed="11" type="LINE"/>
            <counter covered="0" missed="4" type="COMPLEXITY"/>
            <counter covered="0" missed="4" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </class>
        <class name="org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer" sourcefilename="BaseMultiStartMultivariateOptimizer.java">
            <method desc="(Lorg/apache/commons/math3/optim/BaseMultivariateOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V" line="53" name="&lt;init&gt;">
                <counter covered="0" missed="29" type="INSTRUCTION"/>
                <counter covered="0" missed="2" type="BRANCH"/>
                <counter covered="0" missed="9" type="LINE"/>
                <counter covered="0" missed="2" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()I" line="95" name="getEvaluations">
                <counter covered="0" missed="3" type="INSTRUCTION"/>
                <counter covered="0" missed="1" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;" line="132" name="optimize">
                <counter covered="0" missed="7" type="INSTRUCTION"/>
                <counter covered="0" missed="2" type="LINE"/>
                <counter covered="0" missed="1" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <method desc="()Ljava/lang/Object;" line="145" name="doOptimize">
                <counter covered="0" missed="194" type="INSTRUCTION"/>
                <counter covered="0" missed="32" type="BRANCH"/>
                <counter covered="0" missed="42" type="LINE"/>
                <counter covered="0" missed="17" type="COMPLEXITY"/>
                <counter covered="0" missed="1" type="METHOD"/>
            </method>
            <counter covered="0" missed="233" type="INSTRUCTION"/>
            <counter covered="0" missed="34" type="BRANCH"/>
            <counter covered="0" missed="54" type="LINE"/>
            <counter covered="0" missed="21" type="COMPLEXITY"/>
            <counter covered="0" missed="4" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </class>
        <sourcefile name="InitialGuess.java">
            <line cb="0" ci="0" mb="0" mi="2" nr="34"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="35"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="36"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="44"/>
            <counter covered="0" missed="13" type="INSTRUCTION"/>
            <counter covered="0" missed="4" type="LINE"/>
            <counter covered="0" missed="2" type="COMPLEXITY"/>
            <counter covered="0" missed="2" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </sourcefile>
        <sourcefile name="SimpleBounds.java">
            <line cb="0" ci="0" mb="0" mi="2" nr="41"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="42"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="43"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="44"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="52"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="60"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="72"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="73"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="74"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="75"/>
            <line cb="0" ci="0" mb="0" mi="6" nr="77"/>
            <counter covered="0" missed="41" type="INSTRUCTION"/>
            <counter covered="0" missed="11" type="LINE"/>
            <counter covered="0" missed="4" type="COMPLEXITY"/>
            <counter covered="0" missed="4" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </sourcefile>
        <sourcefile name="SimplePointChecker.java">
            <line cb="0" ci="0" mb="0" mi="4" nr="67"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="68"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="69"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="87"/>
            <line cb="0" ci="0" mb="2" mi="2" nr="89"/>
            <line cb="0" ci="0" mb="0" mi="6" nr="90"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="92"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="93"/>
            <line cb="0" ci="0" mb="4" mi="8" nr="115"/>
            <line cb="0" ci="0" mb="0" mi="2" nr="116"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="119"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="120"/>
            <line cb="0" ci="0" mb="2" mi="8" nr="121"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="122"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="123"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="124"/>
            <line cb="0" ci="0" mb="0" mi="6" nr="125"/>
            <line cb="0" ci="0" mb="4" mi="12" nr="126"/>
            <line cb="0" ci="0" mb="0" mi="2" nr="128"/>
            <line cb="0" ci="0" mb="0" mi="2" nr="131"/>
            <counter covered="0" missed="85" type="INSTRUCTION"/>
            <counter covered="0" missed="12" type="BRANCH"/>
            <counter covered="0" missed="20" type="LINE"/>
            <counter covered="0" missed="9" type="COMPLEXITY"/>
            <counter covered="0" missed="3" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </sourcefile>
        <sourcefile name="BaseMultivariateOptimizer.java">
            <line cb="0" ci="0" mb="0" mi="3" nr="47"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="48"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="65"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="81"/>
            <line cb="0" ci="0" mb="2" mi="16" nr="85"/>
            <line cb="0" ci="0" mb="2" mi="3" nr="86"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="87"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="88"/>
            <line cb="0" ci="0" mb="2" mi="3" nr="90"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="91"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="92"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="93"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="94"/>
            <line cb="0" ci="0" mb="0" mi="2" nr="99"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="100"/>
            <line cb="0" ci="0" mb="2" mi="10" nr="108"/>
            <line cb="0" ci="0" mb="2" mi="10" nr="114"/>
            <line cb="0" ci="0" mb="2" mi="10" nr="120"/>
            <line cb="0" ci="0" mb="2" mi="3" nr="127"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="128"/>
            <line cb="0" ci="0" mb="2" mi="3" nr="129"/>
            <line cb="0" ci="0" mb="2" mi="5" nr="130"/>
            <line cb="0" ci="0" mb="0" mi="8" nr="131"/>
            <line cb="0" ci="0" mb="2" mi="7" nr="133"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="134"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="135"/>
            <line cb="0" ci="0" mb="2" mi="4" nr="136"/>
            <line cb="0" ci="0" mb="0" mi="9" nr="137"/>
            <line cb="0" ci="0" mb="2" mi="3" nr="141"/>
            <line cb="0" ci="0" mb="2" mi="5" nr="142"/>
            <line cb="0" ci="0" mb="0" mi="8" nr="143"/>
            <line cb="0" ci="0" mb="2" mi="7" nr="145"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="146"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="147"/>
            <line cb="0" ci="0" mb="2" mi="4" nr="148"/>
            <line cb="0" ci="0" mb="0" mi="9" nr="149"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="154"/>
            <counter covered="0" missed="184" type="INSTRUCTION"/>
            <counter covered="0" missed="30" type="BRANCH"/>
            <counter covered="0" missed="37" type="LINE"/>
            <counter covered="0" missed="22" type="COMPLEXITY"/>
            <counter covered="0" missed="7" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </sourcefile>
        <sourcefile name="SimpleVectorValueChecker.java">
            <line cb="0" ci="0" mb="0" mi="4" nr="66"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="67"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="68"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="88"/>
            <line cb="0" ci="0" mb="2" mi="2" nr="90"/>
            <line cb="0" ci="0" mb="0" mi="6" nr="91"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="93"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="94"/>
            <line cb="0" ci="0" mb="4" mi="8" nr="116"/>
            <line cb="0" ci="0" mb="0" mi="2" nr="117"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="120"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="121"/>
            <line cb="0" ci="0" mb="2" mi="8" nr="122"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="123"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="124"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="125"/>
            <line cb="0" ci="0" mb="0" mi="6" nr="126"/>
            <line cb="0" ci="0" mb="4" mi="12" nr="127"/>
            <line cb="0" ci="0" mb="0" mi="2" nr="129"/>
            <line cb="0" ci="0" mb="0" mi="2" nr="132"/>
            <counter covered="0" missed="83" type="INSTRUCTION"/>
            <counter covered="0" missed="12" type="BRANCH"/>
            <counter covered="0" missed="20" type="LINE"/>
            <counter covered="0" missed="9" type="COMPLEXITY"/>
            <counter covered="0" missed="3" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </sourcefile>
        <sourcefile name="AbstractOptimizationProblem.java">
            <line cb="0" ci="0" mb="0" mi="5" nr="35"/>
            <line cb="0" ci="0" mb="0" mi="6" nr="37"/>
            <line cb="0" ci="0" mb="0" mi="2" nr="55"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="56"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="57"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="58"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="59"/>
            <line cb="0" ci="0" mb="0" mi="7" nr="63"/>
            <line cb="0" ci="0" mb="0" mi="7" nr="68"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="73"/>
            <line cb="0" ci="0" mb="0" mi="6" nr="85"/>
            <line cb="0" ci="0" mb="0" mi="6" nr="98"/>
            <counter covered="0" missed="52" type="INSTRUCTION"/>
            <counter covered="0" missed="12" type="LINE"/>
            <counter covered="0" missed="7" type="COMPLEXITY"/>
            <counter covered="0" missed="7" type="METHOD"/>
            <counter covered="0" missed="3" type="CLASS"/>
        </sourcefile>
        <sourcefile name="BaseMultiStartMultivariateOptimizer.java">
            <line cb="0" ci="0" mb="0" mi="3" nr="53"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="58"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="81"/>
            <line cb="0" ci="0" mb="2" mi="3" nr="83"/>
            <line cb="0" ci="0" mb="0" mi="6" nr="84"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="87"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="88"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="89"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="90"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="95"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="132"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="134"/>
            <line cb="0" ci="0" mb="2" mi="9" nr="145"/>
            <line cb="0" ci="0" mb="2" mi="6" nr="146"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="147"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="148"/>
            <line cb="0" ci="0" mb="2" mi="6" nr="150"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="151"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="152"/>
            <line cb="0" ci="0" mb="2" mi="4" nr="156"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="157"/>
            <line cb="0" ci="0" mb="2" mi="4" nr="159"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="160"/>
            <line cb="0" ci="0" mb="0" mi="2" nr="163"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="164"/>
            <line cb="0" ci="0" mb="0" mi="2" nr="165"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="167"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="168"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="169"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="170"/>
            <line cb="0" ci="0" mb="2" mi="8" nr="173"/>
            <line cb="0" ci="0" mb="0" mi="12" nr="177"/>
            <line cb="0" ci="0" mb="0" mi="2" nr="179"/>
            <line cb="0" ci="0" mb="2" mi="2" nr="180"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="181"/>
            <line cb="0" ci="0" mb="0" mi="2" nr="183"/>
            <line cb="0" ci="0" mb="2" mi="2" nr="184"/>
            <line cb="0" ci="0" mb="2" mi="5" nr="185"/>
            <line cb="0" ci="0" mb="0" mi="7" nr="186"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="188"/>
            <line cb="0" ci="0" mb="4" mi="11" nr="189"/>
            <line cb="0" ci="0" mb="8" mi="20" nr="190"/>
            <line cb="0" ci="0" mb="0" mi="2" nr="192"/>
            <line cb="0" ci="0" mb="0" mi="9" nr="197"/>
            <line cb="0" ci="0" mb="0" mi="6" nr="199"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="200"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="201"/>
            <line cb="0" ci="0" mb="0" mi="2" nr="202"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="203"/>
            <line cb="0" ci="0" mb="0" mi="8" nr="206"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="209"/>
            <line cb="0" ci="0" mb="2" mi="3" nr="210"/>
            <line cb="0" ci="0" mb="0" mi="2" nr="212"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="216"/>
            <counter covered="0" missed="233" type="INSTRUCTION"/>
            <counter covered="0" missed="34" type="BRANCH"/>
            <counter covered="0" missed="54" type="LINE"/>
            <counter covered="0" missed="21" type="COMPLEXITY"/>
            <counter covered="0" missed="4" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </sourcefile>
        <sourcefile name="MaxIter.java">
            <line cb="0" ci="0" mb="0" mi="2" nr="34"/>
            <line cb="0" ci="0" mb="2" mi="2" nr="35"/>
            <line cb="0" ci="0" mb="0" mi="6" nr="36"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="39"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="40"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="48"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="59"/>
            <counter covered="0" missed="22" type="INSTRUCTION"/>
            <counter covered="0" missed="2" type="BRANCH"/>
            <counter covered="0" missed="7" type="LINE"/>
            <counter covered="0" missed="4" type="COMPLEXITY"/>
            <counter covered="0" missed="3" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </sourcefile>
        <sourcefile name="BaseOptimizer.java">
            <line cb="0" ci="0" mb="0" mi="5" nr="47"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="48"/>
            <line cb="0" ci="0" mb="0" mi="2" nr="57"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="58"/>
            <line cb="0" ci="0" mb="0" mi="10" nr="60"/>
            <line cb="0" ci="0" mb="0" mi="10" nr="61"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="62"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="70"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="82"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="91"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="103"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="112"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="147"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="150"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="151"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="153"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="169"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="170"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="172"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="191"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="192"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="202"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="203"/>
            <line cb="0" ci="0" mb="2" mi="16" nr="219"/>
            <line cb="0" ci="0" mb="2" mi="3" nr="220"/>
            <line cb="0" ci="0" mb="0" mi="6" nr="221"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="222"/>
            <line cb="0" ci="0" mb="2" mi="3" nr="224"/>
            <line cb="0" ci="0" mb="0" mi="6" nr="225"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="226"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="229"/>
            <line cb="0" ci="0" mb="0" mi="6" nr="242"/>
            <line cb="0" ci="0" mb="0" mi="6" nr="257"/>
            <counter covered="0" missed="129" type="INSTRUCTION"/>
            <counter covered="0" missed="6" type="BRANCH"/>
            <counter covered="0" missed="33" type="LINE"/>
            <counter covered="0" missed="17" type="COMPLEXITY"/>
            <counter covered="0" missed="14" type="METHOD"/>
            <counter covered="0" missed="3" type="CLASS"/>
        </sourcefile>
        <sourcefile name="OptimizationProblem.java"/>
        <sourcefile name="OptimizationData.java"/>
        <sourcefile name="MaxEval.java">
            <line cb="0" ci="0" mb="0" mi="2" nr="34"/>
            <line cb="0" ci="0" mb="2" mi="2" nr="35"/>
            <line cb="0" ci="0" mb="0" mi="6" nr="36"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="39"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="40"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="48"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="59"/>
            <counter covered="0" missed="22" type="INSTRUCTION"/>
            <counter covered="0" missed="2" type="BRANCH"/>
            <counter covered="0" missed="7" type="LINE"/>
            <counter covered="0" missed="4" type="COMPLEXITY"/>
            <counter covered="0" missed="3" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </sourcefile>
        <sourcefile name="SimpleValueChecker.java">
            <line cb="0" ci="0" mb="0" mi="4" nr="65"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="66"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="67"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="86"/>
            <line cb="0" ci="0" mb="2" mi="2" nr="88"/>
            <line cb="0" ci="0" mb="0" mi="6" nr="89"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="91"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="92"/>
            <line cb="0" ci="0" mb="4" mi="8" nr="114"/>
            <line cb="0" ci="0" mb="0" mi="2" nr="115"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="118"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="119"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="120"/>
            <line cb="0" ci="0" mb="0" mi="6" nr="121"/>
            <line cb="0" ci="0" mb="4" mi="16" nr="122"/>
            <counter covered="0" missed="71" type="INSTRUCTION"/>
            <counter covered="0" missed="10" type="BRANCH"/>
            <counter covered="0" missed="15" type="LINE"/>
            <counter covered="0" missed="8" type="COMPLEXITY"/>
            <counter covered="0" missed="3" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </sourcefile>
        <sourcefile name="PointVectorValuePair.java">
            <line cb="0" ci="0" mb="0" mi="5" nr="43"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="44"/>
            <line cb="0" ci="0" mb="8" mi="24" nr="57"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="65"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="73"/>
            <line cb="0" ci="0" mb="2" mi="8" nr="74"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="83"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="93"/>
            <line cb="0" ci="0" mb="2" mi="8" nr="94"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="104"/>
            <line cb="0" ci="0" mb="0" mi="9" nr="112"/>
            <line cb="0" ci="0" mb="0" mi="2" nr="134"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="135"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="136"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="137"/>
            <line cb="0" ci="0" mb="0" mi="9" nr="143"/>
            <counter covered="0" missed="94" type="INSTRUCTION"/>
            <counter covered="0" missed="12" type="BRANCH"/>
            <counter covered="0" missed="16" type="LINE"/>
            <counter covered="0" missed="15" type="COMPLEXITY"/>
            <counter covered="0" missed="9" type="METHOD"/>
            <counter covered="0" missed="2" type="CLASS"/>
        </sourcefile>
        <sourcefile name="PointValuePair.java">
            <line cb="0" ci="0" mb="0" mi="5" nr="43"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="44"/>
            <line cb="0" ci="0" mb="4" mi="15" nr="57"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="61"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="69"/>
            <line cb="0" ci="0" mb="2" mi="8" nr="70"/>
            <line cb="0" ci="0" mb="0" mi="4" nr="79"/>
            <line cb="0" ci="0" mb="0" mi="11" nr="87"/>
            <line cb="0" ci="0" mb="0" mi="2" nr="109"/>
            <line cb="0" ci="0" mb="0" mi="5" nr="110"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="111"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="112"/>
            <line cb="0" ci="0" mb="0" mi="9" nr="118"/>
            <counter covered="0" missed="69" type="INSTRUCTION"/>
            <counter covered="0" missed="6" type="BRANCH"/>
            <counter covered="0" missed="13" type="LINE"/>
            <counter covered="0" missed="10" type="COMPLEXITY"/>
            <counter covered="0" missed="7" type="METHOD"/>
            <counter covered="0" missed="2" type="CLASS"/>
        </sourcefile>
        <sourcefile name="ConvergenceChecker.java"/>
        <sourcefile name="AbstractConvergenceChecker.java">
            <line cb="0" ci="0" mb="0" mi="2" nr="44"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="45"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="46"/>
            <line cb="0" ci="0" mb="0" mi="1" nr="47"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="53"/>
            <line cb="0" ci="0" mb="0" mi="3" nr="60"/>
            <counter covered="0" missed="15" type="INSTRUCTION"/>
            <counter covered="0" missed="6" type="LINE"/>
            <counter covered="0" missed="3" type="COMPLEXITY"/>
            <counter covered="0" missed="3" type="METHOD"/>
            <counter covered="0" missed="1" type="CLASS"/>
        </sourcefile>
        <counter covered="0" missed="1113" type="INSTRUCTION"/>
        <counter covered="0" missed="126" type="BRANCH"/>
        <counter covered="0" missed="255" type="LINE"/>
        <counter covered="0" missed="135" type="COMPLEXITY"/>
        <counter covered="0" missed="72" type="METHOD"/>
        <counter covered="0" missed="20" type="CLASS"/>
    </package></report>